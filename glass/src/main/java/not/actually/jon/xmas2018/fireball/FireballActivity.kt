package not.actually.jon.xmas2018.fireball

import com.google.android.glass.media.Sounds
import com.google.android.glass.widget.CardBuilder
import com.google.android.glass.widget.CardScrollAdapter
import com.google.android.glass.widget.CardScrollView

import android.app.Activity
import android.content.Context
import android.media.AudioManager
import android.os.Bundle
import android.view.View
import android.view.ViewGroup
import android.widget.AdapterView

/**
 * An [Activity] showing a tuggable "Hello World!" card.
 *
 *
 * The main content view is composed of a one-card [CardScrollView] that provides tugging
 * feedback to the user when swipe gestures are detected.
 * If your Glassware intends to intercept swipe gestures, you should set the content view directly
 * and use a [com.google.android.glass.touchpad.GestureDetector].
 *
 * @see [GDK Developer Guide](https://developers.google.com/glass/develop/gdk/touch)
 */
class FireballActivity : Activity() {

    /**
     * [CardScrollView] to use as the main content view.
     */
    private var mCardScroller: CardScrollView? = null

    /**
     * "Hello World!" [View] generated by [.buildView].
     */
    private var mView: View? = null

    @Override
    protected fun onCreate(bundle: Bundle) {
        super.onCreate(bundle)

        mView = buildView()

        mCardScroller = CardScrollView(this)
        mCardScroller!!.setAdapter(object : CardScrollAdapter() {
            val count: Int
                @Override
                get() = 1

            @Override
            fun getItem(position: Int): Object? {
                return mView
            }

            @Override
            fun getView(position: Int, convertView: View, parent: ViewGroup): View? {
                return mView
            }

            @Override
            fun getPosition(item: Object): Int {
                return if (mView!!.equals(item)) {
                    0
                } else AdapterView.INVALID_POSITION
            }
        })
        // Handle the TAP event.
        mCardScroller!!.setOnItemClickListener(object : AdapterView.OnItemClickListener() {
            @Override
            fun onItemClick(parent: AdapterView<*>, view: View, position: Int, id: Long) {
                // Plays disallowed sound to indicate that TAP actions are not supported.
                val am = getSystemService(Context.AUDIO_SERVICE) as AudioManager
                am.playSoundEffect(Sounds.DISALLOWED)
            }
        })
        setContentView(mCardScroller)
    }

    @Override
    protected fun onResume() {
        super.onResume()
        mCardScroller!!.activate()
    }

    @Override
    protected fun onPause() {
        mCardScroller!!.deactivate()
        super.onPause()
    }

    /**
     * Builds a Glass styled "Hello World!" view using the [CardBuilder] class.
     */
    private fun buildView(): View {
        val card = CardBuilder(this, CardBuilder.Layout.TEXT)

        card.setText(R.string.hello_world)
        return card.getView()
    }

}
